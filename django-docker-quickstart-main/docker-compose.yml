version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
  backend:
    container_name: "${APP_NAME}-backend"
    build:
      context: .
      dockerfile: deployment/Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - APP_HOST=${APP_HOST}
        - APP_PORT=${APP_PORT}
    volumes:
      - ./src:/usr/src/app/
      - ./deployment/scripts:/app/deployment/scripts/
    env_file: .env
    ports:
      - 3000:3000
    depends_on:
      - db_master
      - db_slave
    command: [ "/bin/sh", "/app/deployment/scripts/backend/start.sh" ]
  
  db_master:
    image: postgres:15.2-alpine
    container_name: "${APP_NAME}-db_master"
    hostname: "${POSTGRES_HOST:-db_master}"
    volumes:
      - postgres_data_dir:/var/lib/postgresql/data/
    env_file: .env
    expose:
      - 5432:5432
    shm_size: 1g
    environment:
      - POSTGRES_USER=master_user
      - POSTGRES_PASSWORD=master_password
      - POSTGRES_DB=test_database
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db_slave:
    image: postgres:15.2-alpine
    container_name: "${APP_NAME}-db_slave"
    hostname: "${POSTGRES_HOST:-db_slave}"
    volumes:
      - postgres_data_dir:/var/lib/postgresql/data/
    env_file: .env
    expose:
      - 5432:5432
    shm_size: 1g
    environment:
      - POSTGRES_USER=slave_user
      - POSTGRES_PASSWORD=slave_password
      - POSTGRES_DB=test_database
      - POSTGRES_MASTER_HOST=postgres_master
      - POSTGRES_MASTER_PORT=5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: "${APP_NAME}-redis"
    image: redis:latest
    volumes:
        - redis_data:/data

  celery-worker: &celery-worker
    container_name: "${APP_NAME}-celery-worker"
    build:
      context: .
      dockerfile: deployment/Dockerfile
    volumes:
      - ./src:/usr/src/app/
      - ./deployment/scripts:/app/deployment/scripts/
    env_file: .env
    depends_on:
      - db_master
      - db_slave
      - redis
      - backend
    command: [ "/bin/sh", "/app/deployment/scripts/celery/start-worker.sh" ]

  celery-beat:
    <<: *celery-worker
    container_name: "${APP_NAME}-celery-beat"
    command: [ "/bin/sh", "/app/deployment/scripts/celery/start-beat.sh" ]

volumes:
  postgres_data_dir:
  redis_data: